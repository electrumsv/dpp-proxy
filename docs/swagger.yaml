definitions:
  dpp.PaymentACK:
    properties:
      error:
        description: |-
          A number indicating why the transaction was not accepted. 0 or undefined indicates no error.
          A 1 or any other positive integer indicates an error. The errors are left undefined for now;
          it is recommended only to use “1” and to fill the memo with a textual explanation about why
          the transaction was not accepted until further numbers are defined and standardised.
        type: integer
      memo:
        description: |-
          Memo may contain information about why there was an error. This field is poorly defined until
          error reporting is more standardised.
        type: string
      mode:
        $ref: '#/definitions/hybridmode.PaymentACK'
        description: Mode data required by specific payment mode
      modeId:
        description: ModeID the chosen mode.
        example: ef63d9775da5
        type: string
      peerChannel:
        $ref: '#/definitions/hybridmode.PeerChannelData'
      redirectUrl:
        type: string
    required:
    - modeId
    type: object
  dpp.PaymentCreateArgs:
    properties:
      paymentID:
        type: string
    type: object
  envelope.JSONEnvelope:
    properties:
      encoding:
        type: string
      mimetype:
        type: string
      payload:
        type: string
      publicKey:
        type: string
      signature:
        type: string
    type: object
  hybridmode.PaymentACK:
    properties:
      peerChannel:
        $ref: '#/definitions/hybridmode.PeerChannelData'
      transactionIds:
        items:
          type: string
        type: array
    type: object
  hybridmode.PeerChannelData:
    properties:
      channel_id:
        type: string
      host:
        type: string
      path:
        type: string
      token:
        type: string
    type: object
  server.ClientError:
    properties:
      code:
        example: N01
        type: string
      id:
        example: e97970bf-2a88-4bc8-90e6-2f597a80b93d
        type: string
      message:
        example: unable to find foo when loading bar
        type: string
      title:
        example: not found
        type: string
    type: object
host: localhost:8445
info:
  contact: {}
  description: Payment Protocol Server is an implementation of a Bip-270 payment flow.
  license:
    name: ISC
    url: https://github.com/libsv/go-payment_protocol/blob/master/LICENSE
  termsOfService: https://github.com/libsv/go-payment_protocol/blob/master/CODE_STANDARDS.md
  title: Payment Protocol Server
  version: 0.0.1
paths:
  /api/v1/payment/{paymentID}:
    get:
      consumes:
      - application/json
      description: Creates a payment request based on a payment id (the identifier
        for an invoice).
      parameters:
      - description: Payment ID
        in: path
        name: paymentID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: contains the signed PaymentTerms
          schema:
            $ref: '#/definitions/envelope.JSONEnvelope'
        "400":
          description: returned if the user input is invalid, usually an issue with
            the paymentID
          schema:
            $ref: '#/definitions/server.ClientError'
        "404":
          description: returned if the paymentID has not been found
          schema:
            $ref: '#/definitions/server.ClientError'
        "500":
          description: returned if there is an unexpected internal error
          schema:
            type: string
      summary: Request to pay an invoice and receive back outputs to use when constructing
        the payment transaction
      tags:
      - Payment
    post:
      consumes:
      - application/json
      description: Creates a payment based on a payment id (the identifier for an
        invoice).
      parameters:
      - description: Payment ID
        in: path
        name: paymentID
        required: true
        type: string
      - description: payment message used in BIP270
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dpp.PaymentCreateArgs'
      produces:
      - application/json
      responses:
        "201":
          description: if success, error code will be empty, otherwise it will be
            filled in with reason
          schema:
            $ref: '#/definitions/dpp.PaymentACK'
        "400":
          description: returned if the user input is invalid, usually an issue with
            the paymentID
          schema:
            $ref: '#/definitions/server.ClientError'
        "404":
          description: returned if the paymentID has not been found
          schema:
            $ref: '#/definitions/server.ClientError'
        "500":
          description: returned if there is an unexpected internal error
          schema:
            type: string
      summary: A user will submit an SpvEnvelope along with other information that
        is validated before being broadcast to the network.
      tags:
      - Payment
  /api/v1/proofs/{txid}:
    post:
      consumes:
      - application/json
      description: Creates a json envelope proof
      parameters:
      - description: Transaction ID
        in: path
        name: txid
        required: true
        type: string
      - description: JSON Envelope
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/envelope.JSONEnvelope'
      produces:
      - application/json
      responses:
        "201":
          description: Created
      summary: InvoiceCreate proof
      tags:
      - Proofs
swagger: "2.0"
